@model Niveau.Areas.User.Models.ShoppingCart.ShoppingCart
@{
    ViewData["Title"] = "Index";
    Layout = "/Areas/User/Views/Shared/_AuthorizeLayout.cshtml";
}
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
</head>

<section class="h-100" style="background-color: #eee;">
    <div class="container h-100 py-5">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-10">

                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h3 class="fw-normal mb-0 text-black">Shopping Cart</h3>
                    <div>
                        <p class="mb-0">
                            <span class="text-muted">Sort by:</span> <a href="#!" class="text-body">
                                price <i class="fas fa-angle-down mt-1"></i>
                            </a>
                        </p>
                    </div>
                </div>
                @if (@Model.Items.Any())
                {
                    @foreach (var item in Model.Items)
                    {
                        <div class="card rounded-3 mb-4">
                            <div class="card-body p-4">
                                <div class="row align-items-center">
                                    <div class="col-md-2 col-lg-2 col-xl-2">
                                        <img src="@item.ImageUrl" class="img-fluid rounded-3" alt="@item.Name">
                                    </div>
                                    <div class="col-md-3 col-lg-3 col-xl-3">
                                        <p class="lead fw-normal mb-2">@item.Name</p>
                                        <p><span class="text-muted">Size: </span>M <span class="text-muted">Color: </span>Grey</p>
                                    </div>
                                    <div class="col-md-2 col-lg-2 col-xl-2 d-flex justify-content-center align-items-center">
                                        <div class="quantity">
                                            <button class="btn btn-outline-primary decrease">-</button>
                                            <span>@item.Quantity</span>
                                            <button class="btn btn-outline-primary increase">+</button>
                                        </div>
                                    </div>
                                    <div class="col-md-2 col-lg-2 col-xl-2">
                                        <div class="price">
                                            <h5>$@item.Price</h5>
                                        </div>
                                    </div>
                                    <div class="col-md-2 col-lg-2 col-xl-2">
                                        <div class="total">
                                            <h5>$@(item.Price * item.Quantity)</h5>
                                        </div>
                                    </div>
                                    <div class="col-md-1 col-lg-1 col-xl-1 text-end">
                                        <a asp-action="RemoveFromCart" asp-route-productId="@item.ProductId">
                                            <button class="btn btn-outline-dark">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>


                    }
                }
                else
                {
                    <div class="col-md-3 col-lg-3 col-xl-3">
                        <p class="lead fw-normal mb-2">Your cart still have nothing</p>
                    </div>
                }

                <div class="card mb-4">
                    <div class="card-body p-4 d-flex flex-row">
                        <div id="totalAmount">
                            <span class="text-muted px-lg-5">Total: </span>
                        </div>
                    </div>
                </div>

                @* <div class="card mb-4">
                <div class="card-body p-4 d-flex flex-row">
                <span class="text-muted px-lg-5">Total: </span>
                </div>
                </div>  *@

                <div class="card">
                    @* onclick="clearCart()" type="button" class="btn btn-danger btn-block btn-lg" *@
                    <div class="card-body">
                        <button asp-controller="ShoppingCart" asp-action="ClearCart" onclick="clearCart()" type="button" class="btn btn-danger btn-block btn-lg">
                            Clear Cart
                        </button>
                        @* <div class="">
                            <form asp-controller="ShoppingCart" asp-action="Checkout" method="get">
                                <button type="submit" class="btn btn-warning btn-block btn-lg">Proceed to Pay</button>
                            </form>
                        </div> *@
                        <a asp-controller="ShoppingCart" asp-action="Payment" type="button" class="btn btn-warning btn-block btn-lg">Thanh toán</a>

                        
                </div>

            </div>
        </div>
    </div>
</section>

<script src="	https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
    function clearCart() {
        // Xóa tất cả các sản phẩm trong giỏ hàng
        var cartItems = document.querySelectorAll('.card');
        cartItems.forEach(function (item) {
            item.remove();
        });

        // Hiển thị thông báo rằng giỏ hàng đã được xóa
        alert("Your cart has been cleared.");
    }

</script>

@section scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Gọi hàm tính tổng tiền khi trang được tải
            calculateTotal();

            // Lấy tất cả các nút tăng và giảm
            const increaseButtons = document.querySelectorAll('.increase');
            const decreaseButtons = document.querySelectorAll('.decrease');

            // Lặp qua mỗi nút tăng và giảm để gắn sự kiện
            increaseButtons.forEach(button => {
                button.addEventListener('click', function () {
                    const row = button.closest('.card'); // Tìm thẻ cha gần nhất có class 'card'
                    const quantityElement = row.querySelector('.quantity span');
                    let quantity = parseInt(quantityElement.textContent);
                    quantity++;
                    quantityElement.textContent = quantity;

                    updateTotal(row); // Cập nhật tổng tiền sau khi thay đổi số lượng
                });
            });

            decreaseButtons.forEach(button => {
                button.addEventListener('click', function () {
                    const row = button.closest('.card'); // Tìm thẻ cha gần nhất có class 'card'
                    const quantityElement = row.querySelector('.quantity span');
                    let quantity = parseInt(quantityElement.textContent);
                    if (quantity > 1) {
                        quantity--;
                        quantityElement.textContent = quantity;

                        updateTotal(row); // Cập nhật tổng tiền sau khi thay đổi số lượng
                    }
                });
            });

            // Hàm tính tổng tiền
            function calculateTotal() {
                const totalCells = document.querySelectorAll('.total h5');
                let totalAmount = 0;
                totalCells.forEach(cell => {
                    totalAmount += parseFloat(cell.textContent.replace('$', ''));
                });
                document.getElementById('totalAmount').textContent = 'Total Amount: $' + totalAmount.toFixed(2);
            }

            // Hàm cập nhật tổng tiền của sản phẩm
            function updateTotal(row) {
                const quantityElement = row.querySelector('.quantity span');
                const priceElement = row.querySelector('.price h5');
                const totalElement = row.querySelector('.total h5');
                const quantity = parseInt(quantityElement.textContent);
                const price = parseFloat(priceElement.textContent.replace('$', '')); // Loại bỏ ký tự '$'
                totalElement.textContent = '$' + (price * quantity).toFixed(2);

                calculateTotal(); // Tính toán lại tổng tiền
            }
        });

    </script>
}


